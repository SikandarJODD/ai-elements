{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "scroll-button",
	"type": "registry:block",
	"description": "The ScrollButton component provides a floating button to scroll to the bottom of chat containers. Features context-based visibility management and smooth scrolling behavior.",
	"dependencies": [
		"runed"
	],
	"devDependencies": [
		"@lucide/svelte@^0.544.0"
	],
	"registryDependencies": [
		"button"
	],
	"meta": {
		"author": "SikandarJODD",
		"version": "1.0.0",
		"tags": [
			"prompt-kit",
			"scroll",
			"button",
			"navigation",
			"chat"
		],
		"category": "Prompt Kit",
		"documentation": "https://ai-elements.vercel.app/prompt-kit/scroll-button",
		"repository": "https://github.com/SikandarJODD/ai-elements",
		"complexity": "beginner",
		"updated": "2025-10-19",
		"featured": false
	},
	"files": [
		{
			"content": "<script lang=\"ts\" module>\n\timport { cn } from \"$UTILS$\";\n\timport { type ButtonSize, type ButtonVariant } from \"$COMPONENTS$/ui/button/index.js\";\n\n\texport type ScrollButtonProps = {\n\t\tclass?: string;\n\t\tvariant?: ButtonVariant;\n\t\tsize?: ButtonSize;\n\t\tref?: HTMLElement | null;\n\t\tonclick?: (event: MouseEvent) => void;\n\t};\n</script>\n\n<script lang=\"ts\">\n\timport { Button } from \"$COMPONENTS$/ui/button/index.js\";\n\timport ChevronDown from \"@lucide/svelte/icons/chevron-down\";\n\timport { getScrollContext } from \"./scroll-context.svelte.js\";\n\n\tlet {\n\t\tclass: className,\n\t\tvariant = \"outline\",\n\t\tsize = \"sm\",\n\t\tref = $bindable(null),\n\t\tonclick,\n\t\t...restProps\n\t}: ScrollButtonProps = $props();\n\n\tconst scrollContext = getScrollContext();\n\tconst isAtBottom = $derived(scrollContext.isAtBottom);\n\n\tconst handleClick = (event: MouseEvent) => {\n\t\tscrollContext.scrollToBottom();\n\t\tonclick?.(event);\n\t};\n</script>\n\n<Button\n\tbind:ref\n\t{variant}\n\t{size}\n\tclass={cn(\n\t\t\"h-10 w-10 rounded-full transition-all duration-150 ease-out\",\n\t\t!isAtBottom\n\t\t\t? \"translate-y-0 scale-100 opacity-100\"\n\t\t\t: \"pointer-events-none translate-y-4 scale-95 opacity-0\",\n\t\tclassName\n\t)}\n\tonclick={handleClick}\n>\n\t<ChevronDown class=\"h-5 w-5\" />\n</Button>\n",
			"type": "registry:component",
			"target": "prompt-kit/scroll-button/ScrollButton.svelte"
		},
		{
			"content": "import { watch } from \"runed\";\nimport { setContext, getContext } from \"svelte\";\n\nconst SCROLL_CONTEXT_KEY = Symbol(\"scroll-context\");\n\nclass ScrollContext {\n\t#element: HTMLElement | null = $state(null);\n\t#isAtBottom = $state(true);\n\n\tisAtBottom = $derived(this.#isAtBottom);\n\n\tconstructor() {\n\t\twatch(\n\t\t\t() => this.#element,\n\t\t\t() => {\n\t\t\t\tif (this.#element) {\n\t\t\t\t\tthis.#setupScrollListener();\n\t\t\t\t\treturn () => this.#cleanup();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tsetElement(element: HTMLElement) {\n\t\tthis.#element = element;\n\t}\n\n\tscrollToBottom = (behavior: ScrollBehavior = \"smooth\") => {\n\t\tif (!this.#element) return;\n\n\t\tthis.#element.scrollTo({\n\t\t\ttop: this.#element.scrollHeight,\n\t\t\tbehavior,\n\t\t});\n\t};\n\n\t#handleScroll = () => {\n\t\tif (!this.#element) return;\n\n\t\tconst { scrollTop, scrollHeight, clientHeight } = this.#element;\n\t\tconst threshold = 50;\n\t\tconst isAtBottom = scrollTop + clientHeight >= scrollHeight - threshold;\n\n\t\tthis.#isAtBottom = isAtBottom;\n\t};\n\n\t#setupScrollListener() {\n\t\tif (!this.#element) return;\n\n\t\tthis.#element.addEventListener(\"scroll\", this.#handleScroll, {\n\t\t\tpassive: true,\n\t\t});\n\n\t\t// Initial check\n\t\tthis.#handleScroll();\n\t}\n\n\t#cleanup() {\n\t\tif (this.#element) {\n\t\t\tthis.#element.removeEventListener(\"scroll\", this.#handleScroll);\n\t\t}\n\t}\n}\n\nexport function setScrollContext() {\n\tconst context = new ScrollContext();\n\tsetContext(SCROLL_CONTEXT_KEY, context);\n\treturn context;\n}\n\nexport function getScrollContext(): ScrollContext {\n\tconst context = getContext<ScrollContext>(SCROLL_CONTEXT_KEY);\n\tif (!context) {\n\t\tthrow new Error(\n\t\t\t\"ScrollContext not found. Make sure to call setScrollContext() in a parent component.\"\n\t\t);\n\t}\n\treturn context;\n}\n",
			"type": "registry:file",
			"target": "prompt-kit/scroll-button/scroll-context.svelte.ts"
		},
		{
			"content": "export { default as ScrollButton } from \"./ScrollButton.svelte\";\n\nexport * from \"./scroll-context.svelte.js\";\n",
			"type": "registry:file",
			"target": "prompt-kit/scroll-button/index.ts"
		}
	]
}