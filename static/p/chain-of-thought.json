{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "chain-of-thought",
	"type": "registry:block",
	"description": "The Chain of Thought component displays AI's step-by-step reasoning process with collapsible steps, custom icons, and visual connectors. Features composable architecture with ChainOfThought, ChainOfThoughtStep, ChainOfThoughtTrigger, ChainOfThoughtContent, and ChainOfThoughtItem components.",
	"dependencies": ["@lucide/svelte"],
	"devDependencies": [
		"bits-ui@^2.14.1",
		"@internationalized/date@^3.8.1",
		"@lucide/svelte@^0.544.0"
	],
	"registryDependencies": ["collapsible"],
	"meta": {
		"author": "SikandarJODD",
		"version": "1.0.0",
		"tags": [
			"prompt-kit",
			"chain-of-thought",
			"reasoning",
			"thinking",
			"ai-process",
			"collapsible"
		],
		"category": "Prompt Kit",
		"documentation": "https://ai-elements.vercel.app/prompt-kit/chain-of-thought",
		"repository": "https://github.com/SikandarJODD/ai-elements",
		"complexity": "intermediate",
		"updated": "2025-10-30",
		"featured": true
	},
	"files": [
		{
			"content": "<script lang=\"ts\">\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\n\tinterface ChainOfThoughtProps {\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t}\n\n\tlet { class: className, children }: ChainOfThoughtProps = $props();\n</script>\n\n<div class={cn(\"space-y-0\", className)}>\n\t{#if children}\n\t\t{@render children()}\n\t{/if}\n</div>\n\n",
			"type": "registry:component",
			"target": "prompt-kit/chain-of-thought/ChainOfThought.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { Collapsible } from \"$COMPONENTS$/ui/collapsible/index.js\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Collapsible as CollapsiblePrimitive } from \"bits-ui\";\n\timport type { Snippet } from \"svelte\";\n\n\tinterface ChainOfThoughtStepProps extends CollapsiblePrimitive.RootProps {\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t\tisLast?: boolean;\n\t}\n\n\tlet {\n\t\tclass: className,\n\t\tchildren,\n\t\tisLast = false,\n\t\t...restProps\n\t}: ChainOfThoughtStepProps = $props();\n</script>\n\n<Collapsible class={cn(\"group\", className)} data-last={isLast} {...restProps}>\n\t{@render children?.()}\n\t<div class=\"flex justify-start group-data-[last=true]:hidden\">\n\t\t<div class=\"bg-primary/20 ml-1.75 h-4 w-px\" />\n\t</div>\n</Collapsible>\n\n",
			"type": "registry:component",
			"target": "prompt-kit/chain-of-thought/ChainOfThoughtStep.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { CollapsibleTrigger } from \"$COMPONENTS$/ui/collapsible/index.js\";\n\timport { cn } from \"$UTILS$\";\n\timport { ChevronDown, Circle } from \"@lucide/svelte\";\n\timport type { Collapsible as CollapsiblePrimitive } from \"bits-ui\";\n\timport type { Snippet } from \"svelte\";\n\n\tinterface ChainOfThoughtTriggerProps extends CollapsiblePrimitive.TriggerProps {\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t\tleftIcon?: Snippet;\n\t\tswapIconOnHover?: boolean;\n\t}\n\n\tlet {\n\t\tclass: className,\n\t\tchildren,\n\t\tleftIcon,\n\t\tswapIconOnHover = true,\n\t\t...restProps\n\t}: ChainOfThoughtTriggerProps = $props();\n</script>\n\n<CollapsibleTrigger\n\tclass={cn(\n\t\t\"group text-muted-foreground hover:text-foreground flex cursor-pointer items-center justify-start gap-1 text-left text-sm transition-colors\",\n\t\tclassName\n\t)}\n\t{...restProps}\n>\n\t<div class=\"flex items-center gap-2\">\n\t\t{#if leftIcon}\n\t\t\t<span class=\"relative inline-flex size-4 items-center justify-center\">\n\t\t\t\t<span class={cn(\"transition-opacity\", swapIconOnHover && \"group-hover:opacity-0\")}>\n\t\t\t\t\t{@render leftIcon()}\n\t\t\t\t</span>\n\t\t\t\t{#if swapIconOnHover}\n\t\t\t\t\t<ChevronDown\n\t\t\t\t\t\tclass=\"absolute size-4 opacity-0 transition-opacity group-hover:opacity-100 group-data-[state=open]:rotate-180\"\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t</span>\n\t\t{:else}\n\t\t\t<span class=\"relative inline-flex size-4 items-center justify-center\">\n\t\t\t\t<Circle class=\"size-2 fill-current\" />\n\t\t\t</span>\n\t\t{/if}\n\t\t<span>{@render children?.()}</span>\n\t</div>\n\t{#if !leftIcon}\n\t\t<ChevronDown class=\"size-4 transition-transform group-data-[state=open]:rotate-180\" />\n\t{/if}\n</CollapsibleTrigger>\n\n",
			"type": "registry:component",
			"target": "prompt-kit/chain-of-thought/ChainOfThoughtTrigger.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { CollapsibleContent } from \"$COMPONENTS$/ui/collapsible/index.js\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Collapsible as CollapsiblePrimitive } from \"bits-ui\";\n\timport type { Snippet } from \"svelte\";\n\n\tinterface ChainOfThoughtContentProps extends CollapsiblePrimitive.ContentProps {\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t}\n\n\tlet { class: className, children, ...restProps }: ChainOfThoughtContentProps = $props();\n</script>\n\n<CollapsibleContent\n\tclass={cn(\n\t\t\"text-popover-foreground data-[state=closed]:animate-collapsible-up data-[state=open]:animate-collapsible-down overflow-hidden\",\n\t\tclassName\n\t)}\n\t{...restProps}\n>\n\t<div class=\"grid grid-cols-[min-content_minmax(0,1fr)] gap-x-4\">\n\t\t<div class=\"bg-primary/20 ml-1.75 h-full w-px group-data-[last=true]:hidden\" />\n\t\t<div class=\"ml-1.75 h-full w-px bg-transparent group-data-[last=false]:hidden\" />\n\t\t<div class=\"mt-2 space-y-2\">{@render children?.()}</div>\n\t</div>\n</CollapsibleContent>\n\n",
			"type": "registry:component",
			"target": "prompt-kit/chain-of-thought/ChainOfThoughtContent.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { cn } from \"$UTILS$\";\n\timport type { HTMLAttributes } from \"svelte/elements\";\n\timport type { Snippet } from \"svelte\";\n\n\tinterface ChainOfThoughtItemProps extends HTMLAttributes<HTMLDivElement> {\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t}\n\n\tlet { class: className, children, ...restProps }: ChainOfThoughtItemProps = $props();\n</script>\n\n<div class={cn(\"text-muted-foreground text-sm\", className)} {...restProps}>\n\t{@render children?.()}\n</div>\n\n",
			"type": "registry:component",
			"target": "prompt-kit/chain-of-thought/ChainOfThoughtItem.svelte"
		},
		{
			"content": "import Root from \"./ChainOfThought.svelte\";\nimport Item from \"./ChainOfThoughtItem.svelte\";\nimport Trigger from \"./ChainOfThoughtTrigger.svelte\";\nimport Content from \"./ChainOfThoughtContent.svelte\";\nimport Step from \"./ChainOfThoughtStep.svelte\";\n\nexport {\n\tRoot,\n\tItem,\n\tTrigger,\n\tContent,\n\tStep,\n\t//\n\tRoot as ChainOfThought,\n\tItem as ChainOfThoughtItem,\n\tTrigger as ChainOfThoughtTrigger,\n\tContent as ChainOfThoughtContent,\n\tStep as ChainOfThoughtStep,\n};\n\n",
			"type": "registry:file",
			"target": "prompt-kit/chain-of-thought/index.ts"
		}
	]
}
