{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "prompt-suggestion",
	"type": "registry:block",
	"description": "The PromptSuggestion component displays clickable prompt suggestions to help users get started with AI conversations. Features customizable suggestions with icons and descriptions.",
	"registryDependencies": ["button"],
	"meta": {
		"author": "SikandarJODD",
		"version": "1.0.0",
		"tags": ["prompt-kit", "suggestion", "prompts", "quick-start", "examples"],
		"category": "Prompt Kit",
		"documentation": "https://svelte-ai-elements.vercel.app//prompt-kit/prompt-suggestion",
		"repository": "https://github.com/SikandarJODD/ai-elements",
		"complexity": "beginner",
		"updated": "2025-10-19",
		"featured": false
	},
	"files": [
		{
			"content": "<script lang=\"ts\" module>\n\timport type { ButtonVariant, ButtonSize } from \"$COMPONENTS$/ui/button/index.js\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\n\texport type PromptSuggestionProps = {\n\t\tchildren?: Snippet;\n\t\tvariant?: ButtonVariant;\n\t\tsize?: ButtonSize;\n\t\tclass?: string;\n\t\thighlight?: string;\n\t\tref?: HTMLElement | null;\n\t\tonclick?: (event: MouseEvent) => void;\n\t\tdisabled?: boolean;\n\t\ttype?: \"button\" | \"submit\" | \"reset\";\n\t};\n</script>\n\n<script lang=\"ts\">\n\timport { Button } from \"$COMPONENTS$/ui/button/index.js\";\n\n\tlet {\n\t\tchildren,\n\t\tvariant = undefined,\n\t\tsize = undefined,\n\t\tclass: className,\n\t\thighlight = undefined,\n\t\tref = $bindable(null),\n\t\tonclick,\n\t\tdisabled,\n\t\ttype = \"button\",\n\t}: PromptSuggestionProps = $props();\n\n\tconst isHighlightMode = $derived(highlight !== undefined && highlight.trim() !== \"\");\n\tconst content = $derived(typeof children === \"string\" ? (children as string) : \"\");\n\n\tconst highlightedContent = $derived.by(() => {\n\t\tif (!isHighlightMode || !content) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst trimmedHighlight = highlight!.trim();\n\t\tconst contentLower = content.toLowerCase();\n\t\tconst highlightLower = trimmedHighlight.toLowerCase();\n\t\tconst shouldHighlight = contentLower.includes(highlightLower);\n\n\t\tif (!shouldHighlight) {\n\t\t\treturn {\n\t\t\t\tbefore: \"\",\n\t\t\t\thighlighted: \"\",\n\t\t\t\tafter: \"\",\n\t\t\t\ttext: content,\n\t\t\t\thasMatch: false,\n\t\t\t};\n\t\t}\n\n\t\tconst index = contentLower.indexOf(highlightLower);\n\t\tif (index === -1) {\n\t\t\treturn {\n\t\t\t\tbefore: \"\",\n\t\t\t\thighlighted: \"\",\n\t\t\t\tafter: \"\",\n\t\t\t\ttext: content,\n\t\t\t\thasMatch: false,\n\t\t\t};\n\t\t}\n\n\t\tconst actualHighlightedText = content.substring(index, index + highlightLower.length);\n\t\tconst before = content.substring(0, index);\n\t\tconst after = content.substring(index + actualHighlightedText.length);\n\n\t\treturn {\n\t\t\tbefore,\n\t\t\thighlighted: actualHighlightedText,\n\t\t\tafter,\n\t\t\ttext: \"\",\n\t\t\thasMatch: true,\n\t\t};\n\t});\n</script>\n\n{#if !isHighlightMode}\n\t<Button\n\t\tbind:ref\n\t\tvariant={variant || \"outline\"}\n\t\tsize={size || \"lg\"}\n\t\tclass={cn(\"rounded-full\", className)}\n\t\t{onclick}\n\t\t{disabled}\n\t\t{type}\n\t>\n\t\t{@render children?.()}\n\t</Button>\n{:else if !content}\n\t<Button\n\t\tbind:ref\n\t\tvariant={variant || \"ghost\"}\n\t\tsize={size || \"sm\"}\n\t\tclass={cn(\n\t\t\t\"w-full cursor-pointer justify-start rounded-xl py-2\",\n\t\t\t\"hover:bg-accent\",\n\t\t\tclassName\n\t\t)}\n\t\t{onclick}\n\t\t{disabled}\n\t\t{type}\n\t>\n\t\t{@render children?.()}\n\t</Button>\n{:else}\n\t<Button\n\t\tbind:ref\n\t\tvariant={variant || \"ghost\"}\n\t\tsize={size || \"sm\"}\n\t\tclass={cn(\n\t\t\t\"w-full cursor-pointer justify-start gap-0 rounded-xl py-2\",\n\t\t\t\"hover:bg-accent\",\n\t\t\tclassName\n\t\t)}\n\t\t{onclick}\n\t\t{disabled}\n\t\t{type}\n\t>\n\t\t{#if highlightedContent?.hasMatch}\n\t\t\t{#if highlightedContent.before}\n\t\t\t\t<span class=\"text-muted-foreground whitespace-pre-wrap\">\n\t\t\t\t\t{highlightedContent.before}\n\t\t\t\t</span>\n\t\t\t{/if}\n\t\t\t<span class=\"text-primary font-medium whitespace-pre-wrap\">\n\t\t\t\t{highlightedContent.highlighted}\n\t\t\t</span>\n\t\t\t{#if highlightedContent.after}\n\t\t\t\t<span class=\"text-muted-foreground whitespace-pre-wrap\">\n\t\t\t\t\t{highlightedContent.after}\n\t\t\t\t</span>\n\t\t\t{/if}\n\t\t{:else}\n\t\t\t<span class=\"text-muted-foreground whitespace-pre-wrap\">\n\t\t\t\t{highlightedContent?.text || content}\n\t\t\t</span>\n\t\t{/if}\n\t</Button>\n{/if}\n",
			"type": "registry:component",
			"target": "prompt-kit/prompt-suggestion/prompt-suggestion.svelte"
		},
		{
			"content": "import Root, { type PromptSuggestionProps } from \"./prompt-suggestion.svelte\";\n\nexport {\n\tRoot,\n\ttype PromptSuggestionProps as Props,\n\t//\n\tRoot as PromptSuggestion,\n\ttype PromptSuggestionProps,\n};\n",
			"type": "registry:file",
			"target": "prompt-kit/prompt-suggestion/index.ts"
		}
	]
}
