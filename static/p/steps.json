{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "steps",
	"type": "registry:block",
	"description": "The Steps component provides a visual step-by-step progress indicator for AI processes. Features step items, trigger, content, and progress bar with context-based state management.",
	"devDependencies": ["@lucide/svelte@^0.544.0"],
	"registryDependencies": ["collapsible", "button"],
	"meta": {
		"author": "SikandarJODD",
		"version": "1.0.0",
		"tags": ["prompt-kit", "steps", "progress", "workflow", "process", "stepper"],
		"category": "Prompt Kit",
		"documentation": "https://svelte-ai-elements.vercel.app//prompt-kit/steps",
		"repository": "https://github.com/SikandarJODD/ai-elements",
		"complexity": "intermediate",
		"updated": "2025-10-19",
		"featured": true
	},
	"files": [
		{
			"content": "<script lang=\"ts\">\n\timport { Collapsible } from \"$COMPONENTS$/ui/collapsible\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\n\tlet {\n\t\tdefaultOpen = true,\n\t\topen = $bindable(defaultOpen),\n\t\tclass: className,\n\t\tchildren,\n\t}: {\n\t\tdefaultOpen?: boolean;\n\t\topen?: boolean;\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t} = $props();\n</script>\n\n<Collapsible bind:open class={cn(className)}>\n\t{#if children}\n\t\t{@render children()}\n\t{/if}\n</Collapsible>\n",
			"type": "registry:component",
			"target": "prompt-kit/steps/steps.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\timport type { HTMLAttributes } from \"svelte/elements\";\n\n\tinterface StepsItemProps extends HTMLAttributes<HTMLDivElement> {\n\t\tchildren?: Snippet;\n\t}\n\n\tlet { class: className, children, ...restProps }: StepsItemProps = $props();\n</script>\n\n<div class={cn(\"text-muted-foreground text-sm\", className)} {...restProps}>\n\t{#if children}\n\t\t{@render children()}\n\t{/if}\n</div>\n",
			"type": "registry:component",
			"target": "prompt-kit/steps/steps-item.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { CollapsibleTrigger } from \"$COMPONENTS$/ui/collapsible\";\n\timport { cn } from \"$UTILS$\";\n\timport { ChevronDown } from \"@lucide/svelte\";\n\timport type { Snippet } from \"svelte\";\n\n\tlet {\n\t\tclass: className,\n\t\tleftIcon,\n\t\tswapIconOnHover = true,\n\t\tchildren,\n\t}: {\n\t\tclass?: string;\n\t\tleftIcon?: Snippet;\n\t\tswapIconOnHover?: boolean;\n\t\tchildren?: Snippet;\n\t} = $props();\n</script>\n\n<CollapsibleTrigger\n\tclass={cn(\n\t\t\"group text-muted-foreground hover:text-foreground flex w-full cursor-pointer items-center justify-start gap-1 text-sm transition-colors\",\n\t\tclassName\n\t)}\n>\n\t<div class=\"flex items-center gap-2\">\n\t\t{#if leftIcon}\n\t\t\t<span class=\"relative inline-flex size-4 items-center justify-center\">\n\t\t\t\t<span class={cn(\"transition-opacity\", swapIconOnHover && \"group-hover:opacity-0\")}>\n\t\t\t\t\t{@render leftIcon()}\n\t\t\t\t</span>\n\t\t\t\t{#if swapIconOnHover}\n\t\t\t\t\t<ChevronDown\n\t\t\t\t\t\tclass=\"absolute size-4 opacity-0 transition-opacity group-hover:opacity-100 group-data-[state=open]:rotate-180\"\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t</span>\n\t\t{/if}\n\t\t{#if children}\n\t\t\t<span>{@render children()}</span>\n\t\t{/if}\n\t</div>\n\t{#if !leftIcon}\n\t\t<ChevronDown class=\"size-4 transition-transform group-data-[state=open]:rotate-180\" />\n\t{/if}\n</CollapsibleTrigger>\n",
			"type": "registry:component",
			"target": "prompt-kit/steps/steps-trigger.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { CollapsibleContent } from \"$COMPONENTS$/ui/collapsible\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\timport StepsBar from \"./steps-bar.svelte\";\n\n\tlet {\n\t\tclass: className,\n\t\tbar,\n\t\tchildren,\n\t}: {\n\t\tclass?: string;\n\t\tbar?: Snippet;\n\t\tchildren?: Snippet;\n\t} = $props();\n</script>\n\n<CollapsibleContent\n\tclass={cn(\n\t\t\"text-popover-foreground data-[state=closed]:animate-collapsible-up data-[state=open]:animate-collapsible-down overflow-hidden\",\n\t\tclassName\n\t)}\n>\n\t<div\n\t\tclass=\"mt-3 grid max-w-full min-w-0 grid-cols-[min-content_minmax(0,1fr)] items-start gap-x-3\"\n\t>\n\t\t<div class=\"min-w-0 self-stretch\">\n\t\t\t{#if bar}\n\t\t\t\t{@render bar()}\n\t\t\t{:else}\n\t\t\t\t<StepsBar />\n\t\t\t{/if}\n\t\t</div>\n\t\t<div class=\"min-w-0 space-y-2\">\n\t\t\t{#if children}\n\t\t\t\t{@render children()}\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n</CollapsibleContent>\n",
			"type": "registry:component",
			"target": "prompt-kit/steps/steps-content.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { cn } from \"$UTILS$\";\n\timport type { HTMLAttributes } from \"svelte/elements\";\n\n\tinterface StepsBarProps extends HTMLAttributes<HTMLDivElement> {}\n\n\tlet { class: className, ...restProps }: StepsBarProps = $props();\n</script>\n\n<div class={cn(\"bg-muted h-full w-[2px]\", className)} aria-hidden=\"true\" {...restProps}></div>\n",
			"type": "registry:component",
			"target": "prompt-kit/steps/steps-bar.svelte"
		},
		{
			"content": "import Steps from \"./steps.svelte\";\nimport StepsBar from \"./steps-bar.svelte\";\nimport StepsContent from \"./steps-content.svelte\";\nimport StepsItem from \"./steps-item.svelte\";\nimport StepsTrigger from \"./steps-trigger.svelte\";\n\nexport { Steps, StepsBar, StepsContent, StepsItem, StepsTrigger };\n",
			"type": "registry:file",
			"target": "prompt-kit/steps/index.ts"
		}
	]
}
