{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "prompt-input",
	"type": "registry:block",
	"description": "The PromptInput component provides a comprehensive text input interface for AI chat with actions, textarea, and state management. Features context-based control for building flexible prompt input experiences.",
	"dependencies": ["runed"],
	"devDependencies": ["bits-ui@^2.14.1", "@internationalized/date@^3.8.1"],
	"registryDependencies": ["textarea", "button", "tooltip"],
	"meta": {
		"author": "SikandarJODD",
		"version": "1.0.0",
		"tags": ["prompt-kit", "input", "prompt", "textarea", "chat-input", "actions"],
		"category": "Prompt Kit",
		"documentation": "https://svelte-ai-elements.vercel.app//prompt-kit/prompt-input",
		"repository": "https://github.com/SikandarJODD/ai-elements",
		"complexity": "intermediate",
		"updated": "2025-10-19",
		"featured": true
	},
	"files": [
		{
			"content": "<script lang=\"ts\">\n\timport { cn } from \"$UTILS$\";\n\timport { Tooltip as TooltipPrimitive } from \"bits-ui\";\n\timport {\n\t\tPromptInputClass,\n\t\tsetPromptInputContext,\n\t\ttype PromptInputSchema,\n\t} from \"./prompt-input-context.svelte.js\";\n\n\tlet {\n\t\tclass: className,\n\t\tisLoading = false,\n\t\tvalue,\n\t\tonValueChange,\n\t\tmaxHeight = 240,\n\t\tonSubmit,\n\t\tchildren,\n\t}: PromptInputSchema & {\n\t\tclass?: string;\n\t\tchildren: import(\"svelte\").Snippet;\n\t} = $props();\n\n\tconst contextInstance = new PromptInputClass({\n\t\tisLoading,\n\t\tvalue,\n\t\tonValueChange,\n\t\tmaxHeight,\n\t\tonSubmit,\n\t\tdisabled: isLoading,\n\t});\n\n\tsetPromptInputContext(contextInstance);\n\n\t// Sync props with context\n\t$effect(() => {\n\t\tcontextInstance.isLoading = isLoading;\n\t\tcontextInstance.disabled = isLoading;\n\t});\n\n\t$effect(() => {\n\t\tif (value !== undefined) {\n\t\t\tcontextInstance.value = value;\n\t\t}\n\t});\n\n\t$effect(() => {\n\t\tcontextInstance.onValueChange = onValueChange;\n\t});\n\n\t$effect(() => {\n\t\tcontextInstance.maxHeight = maxHeight;\n\t});\n\n\t$effect(() => {\n\t\tcontextInstance.onSubmit = onSubmit;\n\t});\n\n\tfunction handleClick() {\n\t\tcontextInstance.textareaRef?.focus();\n\t}\n\n\tfunction handleKeyDown(e: KeyboardEvent) {\n\t\t// Only handle Enter key to focus textarea from wrapper\n\t\t// Don't intercept Space key as it prevents typing spaces in the textarea\n\t\tif (e.key === \"Enter\") {\n\t\t\te.preventDefault();\n\t\t\thandleClick();\n\t\t}\n\t}\n</script>\n\n<TooltipPrimitive.Provider>\n\t<div\n\t\tclass={cn(\n\t\t\t\"border-input bg-background cursor-text rounded-3xl border p-2 shadow-xs\",\n\t\t\tclassName\n\t\t)}\n\t\tonclick={handleClick}\n\t\tonkeydown={handleKeyDown}\n\t\trole=\"button\"\n\t\ttabindex=\"-1\"\n\t>\n\t\t{@render children()}\n\t</div>\n</TooltipPrimitive.Provider>\n",
			"type": "registry:component",
			"target": "prompt-kit/prompt-input/PromptInput.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { cn } from \"$UTILS$\";\n\timport Textarea from \"$COMPONENTS$/ui/textarea/textarea.svelte\";\n\timport { getPromptInputContext } from \"./prompt-input-context.svelte.js\";\n\timport type { HTMLTextareaAttributes } from \"svelte/elements\";\n\timport { watch } from \"runed\";\n\n\tlet {\n\t\tclass: className,\n\t\tonkeydown,\n\t\tdisableAutosize = false,\n\t\t...restProps\n\t}: HTMLTextareaAttributes & {\n\t\tdisableAutosize?: boolean;\n\t} = $props();\n\n\tconst context = getPromptInputContext();\n\n\t// Auto-resize functionality using watch from runed\n\twatch([() => context.value, () => context.maxHeight, () => disableAutosize], () => {\n\t\tif (disableAutosize) return;\n\t\tif (!context.textareaRef) return;\n\n\t\tif (context.textareaRef.scrollTop === 0) {\n\t\t\tcontext.textareaRef.style.height = \"auto\";\n\t\t}\n\n\t\tcontext.textareaRef.style.height =\n\t\t\ttypeof context.maxHeight === \"number\"\n\t\t\t\t? `${Math.min(context.textareaRef.scrollHeight, context.maxHeight)}px`\n\t\t\t\t: `min(${context.textareaRef.scrollHeight}px, ${context.maxHeight})`;\n\t});\n\n\tfunction handleKeyDown(e: KeyboardEvent & { currentTarget: HTMLTextAreaElement }) {\n\t\tif (e.key === \"Enter\" && !e.shiftKey) {\n\t\t\te.preventDefault();\n\t\t\tcontext.onSubmit?.();\n\t\t}\n\t\tonkeydown?.(e);\n\t}\n\n\tfunction handleInput(e: Event & { currentTarget: HTMLTextAreaElement }) {\n\t\tcontext.setValue(e.currentTarget.value);\n\t}\n</script>\n\n<Textarea\n\tbind:ref={context.textareaRef}\n\tvalue={context.value}\n\toninput={handleInput}\n\tonkeydown={handleKeyDown}\n\tclass={cn(\n\t\t\"text-primary min-h-[44px] w-full resize-none border-none !bg-transparent shadow-none outline-none focus-visible:ring-0 focus-visible:ring-offset-0\",\n\t\tclassName\n\t)}\n\trows={1}\n\tdisabled={context.disabled}\n\t{...restProps}\n></Textarea>\n",
			"type": "registry:component",
			"target": "prompt-kit/prompt-input/PromptInputTextarea.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { Tooltip as TooltipPrimitive } from \"bits-ui\";\n\timport TooltipContent from \"$COMPONENTS$/ui/tooltip/tooltip-content.svelte\";\n\timport TooltipTrigger from \"$COMPONENTS$/ui/tooltip/tooltip-trigger.svelte\";\n\timport { getPromptInputContext } from \"./prompt-input-context.svelte.js\";\n\n\tlet {\n\t\ttooltip,\n\t\tchildren,\n\t\tclass: className,\n\t\tside = \"top\",\n\t\t...restProps\n\t}: {\n\t\ttooltip: import(\"svelte\").Snippet;\n\t\tchildren: import(\"svelte\").Snippet;\n\t\tclass?: string;\n\t\tside?: \"top\" | \"bottom\" | \"left\" | \"right\";\n\t} & Partial<TooltipPrimitive.RootProps> = $props();\n\n\tconst context = getPromptInputContext();\n\n\tfunction handleClick(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t}\n</script>\n\n<TooltipPrimitive.Root {...restProps} delayDuration={0}>\n\t<TooltipTrigger disabled={context.disabled} onclick={handleClick}>\n\t\t{@render children()}\n\t</TooltipTrigger>\n\t<TooltipContent {side} class={className}>\n\t\t{@render tooltip()}\n\t</TooltipContent>\n</TooltipPrimitive.Root>\n",
			"type": "registry:component",
			"target": "prompt-kit/prompt-input/PromptInputAction.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { cn } from \"$UTILS$\";\n\timport type { HTMLAttributes } from \"svelte/elements\";\n\n\tlet {\n\t\tclass: className,\n\t\tchildren,\n\t\t...restProps\n\t}: HTMLAttributes<HTMLDivElement> & {\n\t\tchildren: import(\"svelte\").Snippet;\n\t} = $props();\n</script>\n\n<div class={cn(\"flex items-center gap-2\", className)} {...restProps}>\n\t{@render children()}\n</div>\n",
			"type": "registry:component",
			"target": "prompt-kit/prompt-input/PromptInputActions.svelte"
		},
		{
			"content": "import { getContext, setContext } from \"svelte\";\n\nexport type PromptInputSchema = {\n\tisLoading?: boolean;\n\tvalue?: string;\n\tonValueChange?: (value: string) => void;\n\tmaxHeight?: number | string;\n\tonSubmit?: () => void;\n\tdisabled?: boolean;\n};\n\nexport class PromptInputClass {\n\tisLoading = $state(false);\n\tvalue = $state(\"\");\n\tmaxHeight = $state<number | string>(240);\n\tonSubmit = $state<(() => void) | undefined>(undefined);\n\tdisabled = $state(false);\n\ttextareaRef = $state<HTMLTextAreaElement | null>(null);\n\tonValueChange = $state<((value: string) => void) | undefined>(undefined);\n\n\tconstructor(props: PromptInputSchema) {\n\t\tthis.isLoading = props.isLoading ?? false;\n\t\tthis.value = props.value ?? \"\";\n\t\tthis.maxHeight = props.maxHeight ?? 240;\n\t\tthis.onSubmit = props.onSubmit;\n\t\tthis.disabled = props.disabled ?? false;\n\t\tthis.onValueChange = props.onValueChange;\n\t}\n\n\tsetValue(newValue: string) {\n\t\tthis.value = newValue;\n\t\tthis.onValueChange?.(newValue);\n\t}\n}\n\nconst PROMPT_INPUT_KEY = Symbol(\"prompt-input\");\n\nexport function setPromptInputContext(contextInstance: PromptInputClass) {\n\tsetContext(PROMPT_INPUT_KEY, contextInstance);\n}\n\nexport function getPromptInputContext(): PromptInputClass {\n\tconst context = getContext<PromptInputClass>(PROMPT_INPUT_KEY);\n\n\tif (!context) {\n\t\tthrow new Error(\"PromptInput components must be used within PromptInput\");\n\t}\n\n\treturn context;\n}\n",
			"type": "registry:file",
			"target": "prompt-kit/prompt-input/prompt-input-context.svelte.ts"
		},
		{
			"content": "export { default as PromptInput } from \"./PromptInput.svelte\";\nexport { default as PromptInputTextarea } from \"./PromptInputTextarea.svelte\";\nexport { default as PromptInputActions } from \"./PromptInputActions.svelte\";\nexport { default as PromptInputAction } from \"./PromptInputAction.svelte\";\nexport * from \"./prompt-input-context.svelte.js\";\n",
			"type": "registry:file",
			"target": "prompt-kit/prompt-input/index.ts"
		}
	]
}
