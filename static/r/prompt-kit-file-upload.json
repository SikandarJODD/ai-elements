{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "prompt-kit-file-upload",
	"type": "registry:block",
	"description": "The FileUpload component provides drag-and-drop file upload functionality with preview, validation, and context-based state management. Features trigger and content components for flexible upload UI.",
	"dependencies": [
		"runed"
	],
	"registryDependencies": [
		"button"
	],
	"meta": {
		"author": "SikandarJODD",
		"version": "1.0.0",
		"tags": [
			"prompt-kit",
			"file-upload",
			"drag-drop",
			"attachments",
			"validation"
		],
		"category": "Prompt Kit",
		"documentation": "https://ai-elements.vercel.app/prompt-kit/file-upload",
		"repository": "https://github.com/SikandarJODD/ai-elements",
		"complexity": "intermediate",
		"updated": "2025-10-19",
		"featured": true
	},
	"files": [
		{
			"content": "<script lang=\"ts\">\n\timport { setContext } from \"svelte\";\n\timport type { Snippet } from \"svelte\";\n\timport { FileUploadContext } from \"./file-upload-context.svelte\";\n\n\ttype Props = {\n\t\tonFilesAdded: (files: File[]) => void;\n\t\tchildren: Snippet;\n\t\tmultiple?: boolean;\n\t\taccept?: string;\n\t\tdisabled?: boolean;\n\t};\n\n\tlet { onFilesAdded, children, multiple = true, accept, disabled = false }: Props = $props();\n\n\tconst ctx = new FileUploadContext(multiple, disabled);\n\tsetContext(\"file-upload\", ctx);\n\n\tlet dragCounter = 0;\n\n\tfunction handleFiles(files: FileList) {\n\t\tconst newFiles = Array.from(files);\n\t\tif (multiple) {\n\t\t\tonFilesAdded(newFiles);\n\t\t} else {\n\t\t\tonFilesAdded(newFiles.slice(0, 1));\n\t\t}\n\t}\n\n\tfunction handleDrag(e: DragEvent) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t}\n\n\tfunction handleDragIn(e: DragEvent) {\n\t\thandleDrag(e);\n\t\tdragCounter++;\n\t\tif (e.dataTransfer?.items.length) {\n\t\t\tctx.isDragging = true;\n\t\t}\n\t}\n\n\tfunction handleDragOut(e: DragEvent) {\n\t\thandleDrag(e);\n\t\tdragCounter--;\n\t\tif (dragCounter === 0) {\n\t\t\tctx.isDragging = false;\n\t\t}\n\t}\n\n\tfunction handleDrop(e: DragEvent) {\n\t\thandleDrag(e);\n\t\tctx.isDragging = false;\n\t\tdragCounter = 0;\n\t\tif (e.dataTransfer?.files.length) {\n\t\t\thandleFiles(e.dataTransfer.files);\n\t\t}\n\t}\n\n\tfunction handleFileSelect(e: Event) {\n\t\tconst target = e.target as HTMLInputElement;\n\t\tif (target.files?.length) {\n\t\t\thandleFiles(target.files);\n\t\t\ttarget.value = \"\";\n\t\t}\n\t}\n</script>\n\n<svelte:window\n\tondragenter={handleDragIn}\n\tondragleave={handleDragOut}\n\tondragover={handleDrag}\n\tondrop={handleDrop}\n/>\n\n<input\n\ttype=\"file\"\n\tbind:this={ctx.inputRef}\n\tonchange={handleFileSelect}\n\tclass=\"hidden\"\n\t{multiple}\n\t{accept}\n\taria-hidden=\"true\"\n\t{disabled}\n/>\n\n{@render children()}\n",
			"type": "registry:component",
			"target": "prompt-kit/file-upload/file-upload.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { getContext } from \"svelte\";\n\timport type { FileUploadContext } from \"./file-upload-context.svelte\";\n\timport type { Snippet } from \"svelte\";\n\timport { cn } from \"$UTILS$\";\n\n\ttype Props = {\n\t\tasChild?: boolean;\n\t\tclass?: string;\n\t\tchildren: Snippet;\n\t\tonclick?: (e: MouseEvent) => void;\n\t\t[key: string]: any;\n\t};\n\n\tlet { asChild = false, class: className, children, onclick, ...restProps }: Props = $props();\n\n\tconst context = getContext<FileUploadContext>(\"file-upload\");\n\n\tfunction handleClick(e: MouseEvent) {\n\t\te.stopPropagation();\n\t\tcontext?.inputRef?.click();\n\t\tonclick?.(e);\n\t}\n</script>\n\n{#if asChild}\n\t<div\n\t\trole=\"button\"\n\t\ttabindex=\"0\"\n\t\tclass={className}\n\t\tonclick={handleClick}\n\t\tonkeydown={(e) => {\n\t\t\tif (e.key === \"Enter\" || e.key === \" \") {\n\t\t\t\te.preventDefault();\n\t\t\t\thandleClick(e as any);\n\t\t\t}\n\t\t}}\n\t\t{...restProps}\n\t>\n\t\t{@render children()}\n\t</div>\n{:else}\n\t<button type=\"button\" class={className} onclick={handleClick} {...restProps}>\n\t\t{@render children()}\n\t</button>\n{/if}\n",
			"type": "registry:component",
			"target": "prompt-kit/file-upload/file-upload-trigger.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { getContext, onMount } from \"svelte\";\n\timport type { FileUploadContext } from \"./file-upload-context.svelte\";\n\timport type { Snippet } from \"svelte\";\n\timport { cn } from \"$UTILS$\";\n\n\ttype Props = {\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t\t[key: string]: any;\n\t};\n\n\tlet { class: className, children, ...restProps }: Props = $props();\n\n\tconst context = getContext<FileUploadContext>(\"file-upload\");\n\tlet mounted = $state(false);\n\n\tonMount(() => {\n\t\tmounted = true;\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t});\n\n\tconst shouldRender = $derived(context?.isDragging && mounted && !context?.disabled);\n</script>\n\n{#if shouldRender}\n\t<div\n\t\tclass={cn(\n\t\t\t\"bg-background/80 fixed inset-0 z-50 flex items-center justify-center backdrop-blur-sm\",\n\t\t\t\"animate-in fade-in-0 slide-in-from-bottom-10 zoom-in-90 duration-150\",\n\t\t\tclassName\n\t\t)}\n\t\t{...restProps}\n\t>\n\t\t{#if children}\n\t\t\t{@render children()}\n\t\t{/if}\n\t</div>\n{/if}\n",
			"type": "registry:component",
			"target": "prompt-kit/file-upload/file-upload-content.svelte"
		},
		{
			"content": "export class FileUploadContext {\n\tisDragging = $state(false);\n\tinputRef = $state<HTMLInputElement | null>(null);\n\tmultiple = $state<boolean>(true);\n\tdisabled = $state<boolean>(false);\n\n\tconstructor(multiple: boolean = true, disabled: boolean = false) {\n\t\tthis.multiple = multiple;\n\t\tthis.disabled = disabled;\n\t}\n}\n",
			"type": "registry:file",
			"target": "prompt-kit/file-upload/file-upload-context.svelte.ts"
		},
		{
			"content": "export { default as FileUpload } from \"./file-upload.svelte\";\nexport { default as FileUploadTrigger } from \"./file-upload-trigger.svelte\";\nexport { default as FileUploadContent } from \"./file-upload-content.svelte\";\nexport { FileUploadContext } from \"./file-upload-context.svelte\";\n",
			"type": "registry:file",
			"target": "prompt-kit/file-upload/index.ts"
		}
	]
}