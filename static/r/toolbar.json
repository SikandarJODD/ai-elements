{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "toolbar",
	"type": "registry:block",
	"description": "The Toolbar component provides an action toolbar that appears on hover over workflow nodes. It contains quick action buttons for common node operations like edit, delete, duplicate, or other custom actions.",
	"dependencies": ["@xyflow/svelte"],
	"registryDependencies": ["button"],
	"meta": {
		"author": "SikandarJODD",
		"version": "1.0.0",
		"tags": ["workflow", "toolbar", "actions", "node-actions", "hover"],
		"category": "AI Workflow",
		"documentation": "https://ai-elements.vercel.app/components/workflow",
		"repository": "https://github.com/SikandarJODD/ai-elements",
		"complexity": "beginner",
		"updated": "2025-10-10",
		"featured": false
	},
	"files": [
		{
			"content": "<script lang=\"ts\">\n\timport { NodeToolbar, Position } from \"@xyflow/svelte\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\timport type { NodeToolbarProps } from \"@xyflow/svelte\";\n\n\tinterface ToolbarProps extends Omit<NodeToolbarProps, \"children\"> {\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t}\n\n\tlet {\n\t\tclass: className,\n\t\tchildren,\n\t\tposition = Position.Bottom,\n\t\t...restProps\n\t}: ToolbarProps = $props();\n</script>\n\n<NodeToolbar\n\tclass={cn(\"bg-background flex items-center gap-1 rounded-sm border p-1.5\", className)}\n\t{position}\n\t{...restProps}\n>\n\t{#if children}\n\t\t{@render children()}\n\t{/if}\n</NodeToolbar>\n",
			"type": "registry:component",
			"target": "ai-elements/workflow/toolbar/toolbar.svelte"
		},
		{
			"content": "export { default as Toolbar } from \"./toolbar.svelte\";\n",
			"type": "registry:file",
			"target": "ai-elements/workflow/toolbar/index.ts"
		}
	]
}
