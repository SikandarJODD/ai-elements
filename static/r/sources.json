{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "sources",
	"type": "registry:block",
	"description": "The Sources component displays a collapsible list of sources and references used in AI responses, with expandable content and visual indicators.",
	"registryDependencies": [
		"collapsible"
	],
	"meta": {
		"author": "SikandarJODD"
	},
	"files": [
		{
			"content": "<script lang=\"ts\">\r\n  import { Collapsible } from \"$lib/components/ui/collapsible/index.js\";\r\n  import { cn } from \"$UTILS$.js\";\r\n  import type { Snippet } from \"svelte\";\r\n\r\n  interface Props {\r\n    class?: string;\r\n    children?: Snippet;\r\n    [key: string]: any;\r\n  }\r\n\r\n  let { class: className = \"\", children, ...restProps }: Props = $props();\r\n\r\n  let id = $derived.by(() => crypto.randomUUID());\r\n</script>\r\n\r\n<Collapsible\r\n  {id}\r\n  class={cn(\"not-prose mb-4 text-primary text-xs\", className)}\r\n  {...restProps}\r\n>\r\n  {@render children?.()}\r\n</Collapsible>\r\n",
			"type": "registry:component",
			"target": "ai-elements/sources/Sources.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n  import { CollapsibleTrigger } from \"$lib/components/ui/collapsible/index.js\";\r\n  import { cn } from \"$UTILS$.js\";\r\n  import type { Snippet } from \"svelte\";\r\n  import ChevronDownIcon from \"./ChevronDownIcon.svelte\";\r\n\r\n  interface Props {\r\n    class?: string;\r\n    count: number;\r\n    children?: Snippet;\r\n    [key: string]: any;\r\n  }\r\n\r\n  let {\r\n    class: className = \"\",\r\n    count,\r\n    children,\r\n    ...restProps\r\n  }: Props = $props();\r\n\r\n  let id = $derived.by(() => crypto.randomUUID());\r\n</script>\r\n\r\n<CollapsibleTrigger\r\n  {id}\r\n  class={cn(\"flex items-center gap-2\", className)}\r\n  {...restProps}\r\n>\r\n  {#if children}\r\n    {@render children?.()}\r\n  {:else}\r\n    <p class=\"font-medium\">Used {count} sources</p>\r\n    <ChevronDownIcon class=\"h-4 w-4\" />\r\n  {/if}\r\n</CollapsibleTrigger>\r\n",
			"type": "registry:component",
			"target": "ai-elements/sources/SourcesTrigger.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n  import { CollapsibleContent } from \"$lib/components/ui/collapsible/index.js\";\r\n  import { cn } from \"$UTILS$.js\";\r\n  import type { Snippet } from \"svelte\";\r\n\r\n  interface Props {\r\n    class?: string;\r\n    [key: string]: any;\r\n    children?: Snippet;\r\n  }\r\n\r\n  let { class: className = \"\", children, ...restProps }: Props = $props();\r\n\r\n  let id = $derived.by(() => crypto.randomUUID());\r\n</script>\r\n\r\n<CollapsibleContent\r\n  {id}\r\n  class={cn(\r\n    \"mt-3 flex w-fit flex-col gap-2\",\r\n    \"data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 outline-none data-[state=closed]:animate-out data-[state=open]:animate-in\",\r\n    className\r\n  )}\r\n  {...restProps}\r\n>\r\n  {@render children?.()}\r\n</CollapsibleContent>\r\n",
			"type": "registry:component",
			"target": "ai-elements/sources/SourcesContent.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n\timport { cn } from \"$UTILS$.js\";\r\n\timport BookIcon from \"./BookIcon.svelte\";\r\n\r\n\tinterface Props {\r\n\t\tclass?: string;\r\n\t\thref?: string;\r\n\t\ttitle?: string;\r\n\t\tchildren?: any;\r\n\t\t[key: string]: any;\r\n\t}\r\n\r\n\tlet { class: className = \"\", href, title, children, ...restProps }: Props = $props();\r\n</script>\r\n\r\n<a\r\n\tclass={cn(\"flex items-center gap-2\", className)}\r\n\t{href}\r\n\trel=\"noreferrer\"\r\n\ttarget=\"_blank\"\r\n\t{...restProps}\r\n>\r\n\t{#if children}\r\n\t\t{@render children()}\r\n\t{:else}\r\n\t\t<BookIcon class=\"h-4 w-4\" />\r\n\t\t<span class=\"block font-medium\">{title}</span>\r\n\t{/if}\r\n</a>",
			"type": "registry:component",
			"target": "ai-elements/sources/Source.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n\tinterface Props {\r\n\t\tclass?: string;\r\n\t\tsize?: number;\r\n\t\t[key: string]: any;\r\n\t}\r\n\r\n\tlet { class: className = \"\", size = 16, ...restProps }: Props = $props();\r\n</script>\r\n\r\n<svg\r\n\t{...restProps}\r\n\tclass={className}\r\n\twidth={size}\r\n\theight={size}\r\n\tviewBox=\"0 0 24 24\"\r\n\tfill=\"none\"\r\n\tstroke=\"currentColor\"\r\n\tstroke-width=\"2\"\r\n\tstroke-linecap=\"round\"\r\n\tstroke-linejoin=\"round\"\r\n>\r\n\t<path d=\"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20\" />\r\n</svg>",
			"type": "registry:component",
			"target": "ai-elements/sources/BookIcon.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n\tinterface Props {\r\n\t\tclass?: string;\r\n\t\tsize?: number;\r\n\t\t[key: string]: any;\r\n\t}\r\n\r\n\tlet { class: className = \"\", size = 16, ...restProps }: Props = $props();\r\n</script>\r\n\r\n<svg\r\n\t{...restProps}\r\n\tclass={className}\r\n\twidth={size}\r\n\theight={size}\r\n\tviewBox=\"0 0 24 24\"\r\n\tfill=\"none\"\r\n\tstroke=\"currentColor\"\r\n\tstroke-width=\"2\"\r\n\tstroke-linecap=\"round\"\r\n\tstroke-linejoin=\"round\"\r\n>\r\n\t<path d=\"m6 9 6 6 6-6\" />\r\n</svg>",
			"type": "registry:component",
			"target": "ai-elements/sources/ChevronDownIcon.svelte"
		},
		{
			"content": "export { default as Sources } from \"./Sources.svelte\";\r\nexport { default as SourcesTrigger } from \"./SourcesTrigger.svelte\";\r\nexport { default as SourcesContent } from \"./SourcesContent.svelte\";\r\nexport { default as Source } from \"./Source.svelte\";\r\nexport { default as BookIcon } from \"./BookIcon.svelte\";\r\nexport { default as ChevronDownIcon } from \"./ChevronDownIcon.svelte\";",
			"type": "registry:file",
			"target": "ai-elements/sources/index.ts"
		}
	]
}