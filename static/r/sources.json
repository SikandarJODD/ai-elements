{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "sources",
	"title": "Sources",
	"type": "registry:block",
	"author": "SikandarJODD",
	"description": "The Sources component displays a collapsible list of sources and references used in AI responses, with expandable content and visual indicators.",
	"dependencies": [
		"@lucide/svelte"
	],
	"devDependencies": [
		"@lucide/svelte@^0.544.0"
	],
	"registryDependencies": [
		"collapsible"
	],
	"meta": {
		"author": "SikandarJODD"
	},
	"files": [
		{
			"content": "<script lang=\"ts\">\r\n  import { Collapsible } from \"$COMPONENTS$/ui/collapsible/index.js\";\r\n  import { cn } from \"$UTILS$\";\r\n  import type { Snippet } from \"svelte\";\r\n\r\n  interface Props {\r\n    class?: string;\r\n    children?: Snippet;\r\n    [key: string]: any;\r\n  }\r\n\r\n  let { class: className = \"\", children, ...restProps }: Props = $props();\r\n\r\n  let id = $derived.by(() => crypto.randomUUID());\r\n</script>\r\n\r\n<Collapsible\r\n  {id}\r\n  class={cn(\"not-prose mb-4 text-primary text-xs\", className)}\r\n  {...restProps}\r\n>\r\n  {@render children?.()}\r\n</Collapsible>\r\n",
			"type": "registry:component",
			"target": "ai-elements/sources/Sources.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n  import { CollapsibleTrigger } from \"$COMPONENTS$/ui/collapsible/index.js\";\r\n  import { cn } from \"$UTILS$\";\r\n  import type { Snippet } from \"svelte\";\r\n  import ChevronDownIcon from \"@lucide/svelte/icons/chevron-down\";\r\n\r\n  interface Props {\r\n    class?: string;\r\n    count: number;\r\n    children?: Snippet;\r\n    [key: string]: any;\r\n  }\r\n\r\n  let {\r\n    class: className = \"\",\r\n    count,\r\n    children,\r\n    ...restProps\r\n  }: Props = $props();\r\n\r\n  let id = $derived.by(() => crypto.randomUUID());\r\n</script>\r\n\r\n<CollapsibleTrigger\r\n  {id}\r\n  class={cn(\"flex items-center gap-2\", className)}\r\n  {...restProps}\r\n>\r\n  {#if children}\r\n    {@render children?.()}\r\n  {:else}\r\n    <p class=\"font-medium\">Used {count} sources</p>\r\n    <ChevronDownIcon class=\"h-4 w-4\" />\r\n  {/if}\r\n</CollapsibleTrigger>\r\n",
			"type": "registry:component",
			"target": "ai-elements/sources/SourcesTrigger.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n  import { CollapsibleContent } from \"$COMPONENTS$/ui/collapsible/index.js\";\r\n  import { cn } from \"$UTILS$\";\r\n  import type { Snippet } from \"svelte\";\r\n\r\n  interface Props {\r\n    class?: string;\r\n    [key: string]: any;\r\n    children?: Snippet;\r\n  }\r\n\r\n  let { class: className = \"\", children, ...restProps }: Props = $props();\r\n\r\n  let id = $derived.by(() => crypto.randomUUID());\r\n</script>\r\n\r\n<CollapsibleContent\r\n  {id}\r\n  class={cn(\r\n    \"mt-3 flex w-fit flex-col gap-2\",\r\n    \"data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 outline-none data-[state=closed]:animate-out data-[state=open]:animate-in\",\r\n    className\r\n  )}\r\n  {...restProps}\r\n>\r\n  {@render children?.()}\r\n</CollapsibleContent>\r\n",
			"type": "registry:component",
			"target": "ai-elements/sources/SourcesContent.svelte"
		},
		{
			"content": "<script lang=\"ts\">\r\n  import { cn } from \"$UTILS$\";\r\n  import BookIcon from \"@lucide/svelte/icons/book\";\r\n\r\n  interface Props {\r\n    class?: string;\r\n    href?: string;\r\n    title?: string;\r\n    children?: any;\r\n    [key: string]: any;\r\n  }\r\n\r\n  let {\r\n    class: className = \"\",\r\n    href,\r\n    title,\r\n    children,\r\n    ...restProps\r\n  }: Props = $props();\r\n</script>\r\n\r\n<a\r\n  class={cn(\"flex items-center gap-2\", className)}\r\n  {href}\r\n  rel=\"noreferrer\"\r\n  target=\"_blank\"\r\n  {...restProps}\r\n>\r\n  {#if children}\r\n    {@render children()}\r\n  {:else}\r\n    <BookIcon class=\"h-4 w-4\" />\r\n    <span class=\"block font-medium\">{title}</span>\r\n  {/if}\r\n</a>\r\n",
			"type": "registry:component",
			"target": "ai-elements/sources/Source.svelte"
		},
		{
			"content": "export { default as Sources } from \"./Sources.svelte\";\r\nexport { default as SourcesTrigger } from \"./SourcesTrigger.svelte\";\r\nexport { default as SourcesContent } from \"./SourcesContent.svelte\";\r\nexport { default as Source } from \"./Source.svelte\";",
			"type": "registry:file",
			"target": "ai-elements/sources/index.ts"
		}
	]
}