{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "sources",
	"title": "Sources",
	"type": "registry:block",
	"author": "SikandarJODD",
	"description": "The Sources component displays a collapsible list of sources and references used in AI responses, with expandable content and visual indicators.",
	"dependencies": ["@lucide/svelte"],
	"devDependencies": ["@lucide/svelte@^0.544.0"],
	"registryDependencies": ["collapsible"],
	"meta": {
		"author": "SikandarJODD"
	},
	"files": [
		{
			"content": "<script lang=\"ts\">\n\timport { Collapsible } from \"$COMPONENTS$/ui/collapsible/index.js\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\n\tinterface Props {\n\t\tclass?: string;\n\t\tchildren?: Snippet;\n\t\t[key: string]: any;\n\t}\n\n\tlet { class: className = \"\", children, ...restProps }: Props = $props();\n\n\tlet id = $derived.by(() => crypto.randomUUID());\n</script>\n\n<Collapsible {id} class={cn(\"not-prose text-primary mb-4 text-xs\", className)} {...restProps}>\n\t{@render children?.()}\n</Collapsible>\n",
			"type": "registry:component",
			"target": "ai-elements/sources/Sources.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { CollapsibleTrigger } from \"$COMPONENTS$/ui/collapsible/index.js\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\timport ChevronDownIcon from \"@lucide/svelte/icons/chevron-down\";\n\n\tinterface Props {\n\t\tclass?: string;\n\t\tcount: number;\n\t\tchildren?: Snippet;\n\t\t[key: string]: any;\n\t}\n\n\tlet { class: className = \"\", count, children, ...restProps }: Props = $props();\n\n\tlet id = $derived.by(() => crypto.randomUUID());\n</script>\n\n<CollapsibleTrigger {id} class={cn(\"flex items-center gap-2\", className)} {...restProps}>\n\t{#if children}\n\t\t{@render children?.()}\n\t{:else}\n\t\t<p class=\"font-medium\">Used {count} sources</p>\n\t\t<ChevronDownIcon class=\"h-4 w-4\" />\n\t{/if}\n</CollapsibleTrigger>\n",
			"type": "registry:component",
			"target": "ai-elements/sources/SourcesTrigger.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { CollapsibleContent } from \"$COMPONENTS$/ui/collapsible/index.js\";\n\timport { cn } from \"$UTILS$\";\n\timport type { Snippet } from \"svelte\";\n\n\tinterface Props {\n\t\tclass?: string;\n\t\t[key: string]: any;\n\t\tchildren?: Snippet;\n\t}\n\n\tlet { class: className = \"\", children, ...restProps }: Props = $props();\n\n\tlet id = $derived.by(() => crypto.randomUUID());\n</script>\n\n<CollapsibleContent\n\t{id}\n\tclass={cn(\n\t\t\"mt-3 flex w-fit flex-col gap-2\",\n\t\t\"data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 data-[state=closed]:animate-out data-[state=open]:animate-in outline-none\",\n\t\tclassName\n\t)}\n\t{...restProps}\n>\n\t{@render children?.()}\n</CollapsibleContent>\n",
			"type": "registry:component",
			"target": "ai-elements/sources/SourcesContent.svelte"
		},
		{
			"content": "<script lang=\"ts\">\n\timport { cn } from \"$UTILS$\";\n\timport BookIcon from \"@lucide/svelte/icons/book\";\n\n\tinterface Props {\n\t\tclass?: string;\n\t\thref?: string;\n\t\ttitle?: string;\n\t\tchildren?: any;\n\t\t[key: string]: any;\n\t}\n\n\tlet { class: className = \"\", href, title, children, ...restProps }: Props = $props();\n</script>\n\n<a\n\tclass={cn(\"flex items-center gap-2\", className)}\n\t{href}\n\trel=\"noreferrer\"\n\ttarget=\"_blank\"\n\t{...restProps}\n>\n\t{#if children}\n\t\t{@render children()}\n\t{:else}\n\t\t<BookIcon class=\"h-4 w-4\" />\n\t\t<span class=\"block font-medium\">{title}</span>\n\t{/if}\n</a>\n",
			"type": "registry:component",
			"target": "ai-elements/sources/Source.svelte"
		},
		{
			"content": "export { default as Sources } from \"./Sources.svelte\";\nexport { default as SourcesTrigger } from \"./SourcesTrigger.svelte\";\nexport { default as SourcesContent } from \"./SourcesContent.svelte\";\nexport { default as Source } from \"./Source.svelte\";\n",
			"type": "registry:file",
			"target": "ai-elements/sources/index.ts"
		}
	]
}
