{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "prompt-kit-prompt-suggestion",
	"type": "registry:block",
	"description": "The PromptSuggestion component displays clickable prompt suggestions to help users get started with AI conversations. Features customizable suggestions with icons and descriptions.",
	"registryDependencies": [
		"button"
	],
	"meta": {
		"author": "SikandarJODD",
		"version": "1.0.0",
		"tags": [
			"prompt-kit",
			"suggestion",
			"prompts",
			"quick-start",
			"examples"
		],
		"category": "Prompt Kit",
		"documentation": "https://ai-elements.vercel.app/prompt-kit/prompt-suggestion",
		"repository": "https://github.com/SikandarJODD/ai-elements",
		"complexity": "beginner",
		"updated": "2025-10-19",
		"featured": false
	},
	"files": [
		{
			"content": "<script lang=\"ts\" module>\r\n\timport type { ButtonVariant, ButtonSize } from '$COMPONENTS$/ui/button/index.js';\r\n\timport { cn } from '$UTILS$';\r\n\timport type { Snippet } from 'svelte';\r\n\r\n\texport type PromptSuggestionProps = {\r\n\t\tchildren?: Snippet;\r\n\t\tvariant?: ButtonVariant;\r\n\t\tsize?: ButtonSize;\r\n\t\tclass?: string;\r\n\t\thighlight?: string;\r\n\t\tref?: HTMLElement | null;\r\n\t\tonclick?: (event: MouseEvent) => void;\r\n\t\tdisabled?: boolean;\r\n\t\ttype?: 'button' | 'submit' | 'reset';\r\n\t};\r\n</script>\r\n\r\n<script lang=\"ts\">\r\n\timport { Button } from '$COMPONENTS$/ui/button/index.js';\r\n\r\n\tlet {\r\n\t\tchildren,\r\n\t\tvariant = undefined,\r\n\t\tsize = undefined,\r\n\t\tclass: className,\r\n\t\thighlight = undefined,\r\n\t\tref = $bindable(null),\r\n\t\tonclick,\r\n\t\tdisabled,\r\n\t\ttype = 'button'\r\n\t}: PromptSuggestionProps = $props();\r\n\r\n\tconst isHighlightMode = $derived(\r\n\t\thighlight !== undefined && highlight.trim() !== ''\r\n\t);\r\n\tconst content = $derived(\r\n\t\ttypeof children === 'string' ? (children as string) : ''\r\n\t);\r\n\r\n\tconst highlightedContent = $derived.by(() => {\r\n\t\tif (!isHighlightMode || !content) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst trimmedHighlight = highlight!.trim();\r\n\t\tconst contentLower = content.toLowerCase();\r\n\t\tconst highlightLower = trimmedHighlight.toLowerCase();\r\n\t\tconst shouldHighlight = contentLower.includes(highlightLower);\r\n\r\n\t\tif (!shouldHighlight) {\r\n\t\t\treturn {\r\n\t\t\t\tbefore: '',\r\n\t\t\t\thighlighted: '',\r\n\t\t\t\tafter: '',\r\n\t\t\t\ttext: content,\r\n\t\t\t\thasMatch: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst index = contentLower.indexOf(highlightLower);\r\n\t\tif (index === -1) {\r\n\t\t\treturn {\r\n\t\t\t\tbefore: '',\r\n\t\t\t\thighlighted: '',\r\n\t\t\t\tafter: '',\r\n\t\t\t\ttext: content,\r\n\t\t\t\thasMatch: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst actualHighlightedText = content.substring(\r\n\t\t\tindex,\r\n\t\t\tindex + highlightLower.length\r\n\t\t);\r\n\t\tconst before = content.substring(0, index);\r\n\t\tconst after = content.substring(index + actualHighlightedText.length);\r\n\r\n\t\treturn {\r\n\t\t\tbefore,\r\n\t\t\thighlighted: actualHighlightedText,\r\n\t\t\tafter,\r\n\t\t\ttext: '',\r\n\t\t\thasMatch: true\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n{#if !isHighlightMode}\r\n\t<Button\r\n\t\tbind:ref\r\n\t\tvariant={variant || 'outline'}\r\n\t\tsize={size || 'lg'}\r\n\t\tclass={cn('rounded-full', className)}\r\n\t\t{onclick}\r\n\t\t{disabled}\r\n\t\t{type}\r\n\t>\r\n\t\t{@render children?.()}\r\n\t</Button>\r\n{:else if !content}\r\n\t<Button\r\n\t\tbind:ref\r\n\t\tvariant={variant || 'ghost'}\r\n\t\tsize={size || 'sm'}\r\n\t\tclass={cn(\r\n\t\t\t'w-full cursor-pointer justify-start rounded-xl py-2',\r\n\t\t\t'hover:bg-accent',\r\n\t\t\tclassName\r\n\t\t)}\r\n\t\t{onclick}\r\n\t\t{disabled}\r\n\t\t{type}\r\n\t>\r\n\t\t{@render children?.()}\r\n\t</Button>\r\n{:else}\r\n\t<Button\r\n\t\tbind:ref\r\n\t\tvariant={variant || 'ghost'}\r\n\t\tsize={size || 'sm'}\r\n\t\tclass={cn(\r\n\t\t\t'w-full cursor-pointer justify-start gap-0 rounded-xl py-2',\r\n\t\t\t'hover:bg-accent',\r\n\t\t\tclassName\r\n\t\t)}\r\n\t\t{onclick}\r\n\t\t{disabled}\r\n\t\t{type}\r\n\t>\r\n\t\t{#if highlightedContent?.hasMatch}\r\n\t\t\t{#if highlightedContent.before}\r\n\t\t\t\t<span class=\"text-muted-foreground whitespace-pre-wrap\">\r\n\t\t\t\t\t{highlightedContent.before}\r\n\t\t\t\t</span>\r\n\t\t\t{/if}\r\n\t\t\t<span class=\"text-primary font-medium whitespace-pre-wrap\">\r\n\t\t\t\t{highlightedContent.highlighted}\r\n\t\t\t</span>\r\n\t\t\t{#if highlightedContent.after}\r\n\t\t\t\t<span class=\"text-muted-foreground whitespace-pre-wrap\">\r\n\t\t\t\t\t{highlightedContent.after}\r\n\t\t\t\t</span>\r\n\t\t\t{/if}\r\n\t\t{:else}\r\n\t\t\t<span class=\"text-muted-foreground whitespace-pre-wrap\">\r\n\t\t\t\t{highlightedContent?.text || content}\r\n\t\t\t</span>\r\n\t\t{/if}\r\n\t</Button>\r\n{/if}\r\n",
			"type": "registry:component",
			"target": "prompt-kit/prompt-suggestion/prompt-suggestion.svelte"
		},
		{
			"content": "import Root, { type PromptSuggestionProps } from './prompt-suggestion.svelte';\r\n\r\nexport {\r\n\tRoot,\r\n\ttype PromptSuggestionProps as Props,\r\n\t//\r\n\tRoot as PromptSuggestion,\r\n\ttype PromptSuggestionProps\r\n};\r\n",
			"type": "registry:file",
			"target": "prompt-kit/prompt-suggestion/index.ts"
		}
	]
}